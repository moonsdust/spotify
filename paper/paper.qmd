---
title: "Characteristics of Top Songs Has Changed from Pandemic Brain"
subtitle: "An analysis of songs on Billboard's Year-End Hot 100 list (2014 to 2023)"
author: Emily Su
thanks: "Code and data are available at: https://github.com/moonsdust/top-songs."
date: today
date-format: long
abstract: "First sentence. Second sentence. Third sentence. Fourth sentence."
format:
  pdf:
    toc: true
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(arrow)
library(ggcorrplot)
library(ggplot2)
library(knitr)

# Packages related to causal model created
library(DiagrammeR)
library(rsvg)
library(magrittr)
library(DiagrammeRsvg)
library(png)

# To be removed because this is from example
library(palmerpenguins)
analysis_data <- read_csv('../data/analysis_data/analysis_data.csv')

# Read in data 
playlist_analysis_data <- read_parquet("../data/analysis_data/playlists_analysis_data.parquet")
```


# Introduction


Ghaffari et al noted that other studies have found that people used music as a way to cope and regulate their thoughts and emotions during the COVID-19 pandemic and the lockdowns that came with it [@citecoping]. This finding is similar to how music therapy works. As defined by Canadian Association of Music Therapists, music therapy is the use of music to support an individual's health, social development, and well-being and some of the techniques used includes listening to music [@citemusictherapy]. 


Hurwitz and Krumhansl conducted a study into how people's listening habits over the course of the pandemic and they found that the songs they listened to often is linked to an emotion such as sadness and/or invokes memories from the past [@citeshiftingniches].



During the COVID-19 pandemic, TikTok grew in popularity alongside shortform videos for different types of content. With this, viral songs on TikTok were met with thousands of listens on streaming platforms such as Spotify and sometimes go onto being on lists like the Billboard Year-End Hot 100. 


Music reflects the climate of society. 


However this raises the following question: how are top songs prior to 2020 different from the top songs during and after 2020? To investigate this question, we looked at their music characteristics such as its modality (major or minor key), track duration, loudness, and tempo. 


The estimand is the song characteristics from the Billboard Year-End Hot 100 singles such as its modality (major or minor), track duration, loudness, and tempo if a song was created before 2020 or during and after 2020.



Importance: 
- Being cognizant of music that is popular can help 
- Can help us figure out the overall feelings of society in today's climate after the pandemic.
- Results from this paper can help improve music therapy. 


# Data {#sec-data}

## Variables of Interest

## Data Source and Measurements

## Methodology
The datasets used in this paper were retrieved, simulated, cleaned, analyzed, and tested using the R programming language [@citeR], tidyverse [@citetidyverse], knitr [@citeknitr], janitor [@citejanitor], dplyr [@citedplyr], ggplot2 [@citeggplot2], spotifyr [@citespotifyr], usethis [@citeusethis], arrow [@citearrow], ggcorrplot [@citeggcorrplot],
testthat [@citetestthat]. The packages that were used for the model-related sections or used for the model itself are DiagrammeR [@citeDiagrammeR], rsvg [@citersvg], magrittr [@citemagrittr], DiagrammeRsvg [@citeDiagrammeRsvg], png [@citepng], rstanarm [@citerstanarm], and modelsummary [@citemodelsummary]. 

# Model {#sec-model}

```{r}
#| label: fig-causal-model
#| fig-cap: Causal relationship between song characteristics and hit song (before 2020 or during and after 2020)
#| echo: false
#| warning: false
#| message: false

# Referenced https://www.erikigelstrom.com/articles/causal-graphs-in-r-with-diagrammer/
# https://stackoverflow.com/questions/42737645/how-to-export-images-of-diagrammer-in-r
causal_model <- "digraph {
  graph []
  # Nodes 
  node [shape = plaintext]
    A [label = 'Hit song before 2020 or during and after 2020']
    B [label = 'Modality']
    C [label = 'Loudness']
    D [label = 'Duration']
    E [label = 'Tempo']
    F [label = 'Lyrics (Confounder)']
  # Edges for non-confounding variables
  edge []
    B->A
    C->A
    D->A
    E->A
{ rank = same; }
  # Edges for confounding variable
  edge [style = dashed]
    F -> B
    F -> C
    F -> D
    F -> E
    F -> A
}"

exporting_image <- grViz(causal_model) |>
  export_svg() |>
  charToRaw() |>
  rsvg_png("casual_model.png", width = 1000)

# NOTE: Had to save diagram and read it in as a image since grViz can be only render in HTML and 
# not in PDFs 
# Referenced https://stackoverflow.com/questions/23861000/displaying-images-in-r-in-version-3-1-0
the_image <- readPNG("casual_model.png")
plot.new()
rasterImage(the_image, 0, 0, 0.7, 1)
```

The goal of our modelling strategy is twofold. Firstly,...

Here we briefly describe the Bayesian analysis model used to investigate... Background details and diagnostics are included in [Appendix -@sec-model-details].


## Model set-up

Define $y_i$ as the number of seconds that the plane remained aloft. Then $\beta_i$ is the wing width and $\gamma_i$ is the wing length, both measured in millimeters.  

\begin{align} 
y_i|\mu_i, \sigma &\sim \mbox{Normal}(\mu_i, \sigma) \\
\mu_i &= \alpha + \beta_i + \gamma_i\\
\alpha &\sim \mbox{Normal}(0, 2.5) \\
\beta &\sim \mbox{Normal}(0, 2.5) \\
\gamma &\sim \mbox{Normal}(0, 2.5) \\
\sigma &\sim \mbox{Exponential}(1)
\end{align}

We run the model in R [@citeR] using the `rstanarm` package of @citerstanarm. We use the default priors from `rstanarm`.


### Model justification

We expect a positive relationship between the size of the wings and time spent aloft. In particular...

We can use maths by including latex between dollar signs, for instance $\theta$.


# Results {#sec-results}

## Difference in song characteristics before 2020 (the pandemic) and during and after 2020 (the pandemic) of songs from the Billboard Year-End Hot 100 singles 

### Scale and Modality
```{r}
#| label: fig-key-mode-bar
#| fig-cap: Proportion of songs in different scales before 2020 versus during and after 2020
#| echo: false
#| warning: false
#| message: false

proportion_of_each_key_mode <- 
  playlist_analysis_data |>
  # Group by if song was a hit before or during and after the pandemic
  group_by(period) |>
  # Count each scale
  count(key_mode) |>
  # rename count column to num_of_key_mode
  rename(
    'num_of_key_mode' = n
  ) |>
  mutate( 
    proportion_key_mode =  round(num_of_key_mode / sum(num_of_key_mode), 2)
  ) 

proportion_of_each_key_mode |> 
  ggplot(mapping = aes(x = key_mode, y = proportion_key_mode)) +
  facet_wrap(facets = vars(period), dir = "v") + 
  geom_bar(stat="identity", binwidth = 3) +
  theme_minimal() +
  labs(x = "Scale",
       y = "Proportion") + 
  theme(axis.text.x = element_text(angle = 90))
```

```{r}
#| label: fig-mode-bar
#| fig-cap: Proportion of songs whose modality is in a major or minor key before 2020 versus during and after 2020
#| echo: false
#| warning: false
#| message: false

proportion_of_each_mode <- 
  playlist_analysis_data |>
  # Group by if song was a hit before or during and after the pandemic
  group_by(period) |>
  # Count each scale
  count(mode_name) |>
  # rename count column to num_of_key_mode
  rename(
    'num_of_mode_name' = n
  ) |>
  mutate( 
    proportion_mode_name =  round(num_of_mode_name / sum(num_of_mode_name), 2) 
  ) 


proportion_of_each_mode |> 
  ggplot(mapping = aes(x = mode_name, y = proportion_mode_name)) +
  facet_wrap(facets = vars(period), dir = "v") + 
  geom_bar(stat = "identity", binwidth = 3) +
  theme_minimal() +
  labs(x = "Modality",
       y = "Proportion") + 
  theme(axis.text.x = element_text(angle = 90))
```
```{r}
#| label: tbl-mode-table
#| tbl-cap: Proportion of songs whose modality is in a major or minor key before 2020 versus during and after 2020
#| echo: false
#| warning: false
#| message: false

proportion_of_each_mode |> 
  rename( 
    "Period" = period,
    "Modality" = mode_name,
    "Count of each mode" = num_of_mode_name,
    "Proportion of each mode" = proportion_mode_name
    ) |>
  kable()
```
\newpage

### Track Duration

```{r}
#| label: fig-track-duration-scatterplot
#| fig-cap: Relationship between the hit year and track duration of a song 
#| echo: false
#| warning: false
#| message: false

playlist_analysis_data |> 
  ggplot(aes(x = hit_year, y = track_duration_ms)) +
  geom_smooth() +
  geom_jitter() +  # So we can see all points
  geom_point(alpha = 0.3) +
  theme_minimal() +
  labs(x = "Hit year",
       y = "Duration of song (in ms)")
```

```{r}
#| label: fig-track-duration-hist
#| fig-cap: Distribution of track duration (in ms) before 2020 versus during and after 2020  
#| echo: false
#| warning: false
#| message: false
#| 
playlist_analysis_data |> 
  ggplot(mapping = aes(x = track_duration_ms)) +
  facet_wrap(facets = vars(period), dir = "v") + 
  geom_histogram(binwidth = 7000) +
  theme_minimal() +
  labs(x = "Duration of song (in ms)",
       y = "Count")
```

```{r}
#| label: fig-track-duration-boxplot
#| fig-cap: Track duration (in ms) before 2020 versus during and after 2020  
#| echo: false
#| warning: false
#| message: false

playlist_analysis_data |> 
  ggplot(mapping = aes(x = track_duration_ms)) +
  facet_wrap(facets = vars(period), dir = "v") + 
  geom_boxplot() +
  theme_minimal() +
  labs(x = "Duration of song (in ms)",
       y = "Count")
```

```{r}
#| label: tbl-track-duration-stats-before
#| tbl-cap: Minimum, quartiles, median, and maximum of track duration (in ms) before 2020
#| echo: false
#| warning: false
#| message: false

playlist_analysis_data |> 
  # Filter for "Before Pandemic"
  filter(period == "Before Pandemic") |>
  # Choose track_duration_ms
  select(track_duration_ms) |>
  # Rename columns
  rename (
    "Duration of song (in ms)"= track_duration_ms
  ) |>
  summary() |>
  kable()
```
```{r}
#| label: tbl-track-duration-stats-during-after
#| tbl-cap: Minimum, quartiles, median, and maximum of track duration (in ms) during and after 2020
#| echo: false
#| warning: false
#| message: false

playlist_analysis_data |> 
  # Filter for During and After Pandemic
  filter(period == "During and After Pandemic") |>
  # Choose track_duration_ms
  select(track_duration_ms) |>
  # Rename columns
  rename (
    "Duration of song (in ms)"= track_duration_ms
  ) |>
  summary() |>
  kable()
```

\newpage

### Loudness

```{r}
#| label: fig-loudness-scatterplot
#| fig-cap: Relationship between the hit year and loudness of a song 
#| echo: false
#| warning: false
#| message: false

playlist_analysis_data |> 
  ggplot(aes(x = hit_year, y = loudness)) +
  geom_smooth() +
  geom_jitter() +  # So we can see all points
  geom_point(alpha = 0.3) +
  theme_minimal() +
  labs(x = "Hit year",
       y = "Loudness of song (in dB)")
```
```{r}
#| label: fig-loudness-hist
#| fig-cap: Distribution of loudness (in dB) before 2020 versus during and after 2020  
#| echo: false
#| warning: false
#| message: false
#| 
playlist_analysis_data |> 
  ggplot(mapping = aes(x = loudness)) +
  facet_wrap(facets = vars(period), dir = "v") + 
  geom_histogram(binwidth = 0.3) +
  theme_minimal() +
  labs(x = "Loudness of song (in dB)",
       y = "Count")
```

```{r}
#| label: tbl-loudness-stats-before
#| tbl-cap: Minimum, quartiles, median, and maximum of loudness of song (in dB) before 2020
#| echo: false
#| warning: false
#| message: false

playlist_analysis_data |> 
  # Filter for "Before Pandemic"
  filter(period == "Before Pandemic") |>
  # Choose loudness
  select(loudness) |>
  # Rename columns
  rename (
    "Loudness of song (in dB)"= loudness
  ) |>
  summary() |>
  kable()
```

```{r}
#| label: tbl-loudness-stats-during-after
#| tbl-cap: Minimum, quartiles, median, and maximum of loudness of song (in dB) during and after 2020
#| echo: false
#| warning: false
#| message: false

playlist_analysis_data |> 
  # Filter for "During and After Pandemic"
  filter(period == "During and After Pandemic") |>
  # Choose loudness
  select(loudness) |>
  # Rename columns
  rename (
    "Loudness of song (in dB)"= loudness
  ) |>
  summary() |>
  kable()
```


\newpage

### Tempo

```{r}
#| label: fig-tempo-scatterplot
#| fig-cap: Relationship between the hit year and tempo of a song 
#| echo: false
#| warning: false
#| message: false

playlist_analysis_data |> 
  ggplot(aes(x = hit_year, y = tempo)) +
  geom_smooth() +
  geom_jitter() +  # So we can see all points
  geom_point(alpha = 0.3) +
  theme_minimal() +
  labs(x = "Hit year",
       y = "Tempo of song (BPM)")
```

```{r}
#| label: fig-tempo-hist
#| fig-cap: Distribution of tempo (BPM) before 2020 versus during and after 2020  
#| echo: false
#| warning: false
#| message: false

playlist_analysis_data |> 
  ggplot(mapping = aes(x = tempo)) +
  facet_wrap(facets = vars(period), dir = "v") + 
  geom_histogram(binwidth = 3) +
  theme_minimal() +
  labs(x = "Tempo of song (BPM)",
       y = "Count")
```

```{r}
#| label: tbl-tempo-stats-before
#| tbl-cap: Minimum, quartiles, median, and maximum of tempo of a song (BPM) before 2020
#| echo: false
#| warning: false
#| message: false

playlist_analysis_data |> 
  # Filter for "Before Pandemic"
  filter(period == "Before Pandemic") |>
  # Choose tempo
  select(tempo) |>
  # Rename columns
  rename (
    "Tempo of song (BPM)"= tempo
  ) |>
  summary() |>
  kable()
```

```{r}
#| label: tbl-tempo-stats-during-after
#| tbl-cap: Minimum, quartiles, median, and maximum of tempo of a song (BPM) during and after 2020
#| echo: false
#| warning: false
#| message: false

playlist_analysis_data |> 
  # Filter for "During and After Pandemic"
  filter(period == "During and After Pandemic") |>
  # Choose tempo
  select(tempo) |>
  # Rename columns
  rename (
    "Tempo of song (BPM)"= tempo
  ) |>
  summary() |>
  kable()
```

\newpage


## Model Results

Our results are summarized in @tbl-modelresults.

```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false

library(rstanarm)

first_model <-
  readRDS(file = "../models/first_model.rds")
```

```{r}
#| echo: false
#| eval: true
#| label: tbl-modelresults
#| tbl-cap: "Explanatory models of flight time based on wing width and wing length"
#| warning: false

modelsummary::modelsummary(
  list(
    "First model" = first_model
  ),
  statistic = "mad",
  fmt = 2
)
```




# Discussion

## First discussion point {#sec-first-point}

If my paper were 10 pages, then should be be at least 2.5 pages. The discussion is a chance to show off what you know and what you learnt from all this. 

## Second discussion point

## Third discussion point

## Weaknesses and next steps

Weaknesses and next steps should also be included.

\newpage

\appendix

# Appendix {-}

## Additional Figures and Tables 

```{r}
#| label: fig-correlation-matrix
#| fig-cap: Correlation between numerical characteristics of songs from Billboard Year-End Hot 100 single and if song was a hit before 2020/the pandemic
#| echo: false
#| warning: false
#| message: false

# Referenced https://rpubs.com/Alema/1000474
numeric_playlist_analysis_data <- 
  playlist_analysis_data |>
  select(-c(mode_name, key_mode, period, hit_year))

ggcorrplot(cor(numeric_playlist_analysis_data), 
           hc.order = TRUE,
           outline.color = "white", lab = TRUE, legend.title = "Correlation") 
```


# Model details {#sec-model-details}

## Posterior predictive check

In @fig-ppcheckandposteriorvsprior-1 we implement a posterior predictive check. This shows...

In @fig-ppcheckandposteriorvsprior-2 we compare the posterior with the prior. This shows... 

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
#| label: fig-ppcheckandposteriorvsprior
#| layout-ncol: 2
#| fig-cap: "Examining how the model fits, and is affected by, the data"
#| fig-subcap: ["Posterior prediction check", "Comparing the posterior with the prior"]

pp_check(first_model) +
  theme_classic() +
  theme(legend.position = "bottom")

posterior_vs_prior(first_model) +
  theme_minimal() +
  scale_color_brewer(palette = "Set1") +
  theme(legend.position = "bottom") +
  coord_flip()
```

## Diagnostics

@fig-stanareyouokay-1 is a trace plot. It shows... This suggests...

@fig-stanareyouokay-2 is a Rhat plot. It shows... This suggests...

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-stanareyouokay
#| fig-cap: "Checking the convergence of the MCMC algorithm"
#| fig-subcap: ["Trace plot", "Rhat plot"]
#| layout-ncol: 2

plot(first_model, "trace")

plot(first_model, "rhat")
```



\newpage


# References


